
name: 2 - Build and Deploy Linux

on:
  workflow_dispatch:
  # push:
  #   branches: [ '*' ]
  #   paths:
  #     - paaslab/code/**
  #     - .github/workflows/webproject.yml
  # pull_request:
  #   branches: [ master ]
  #   paths:
  #     - paaslab/code/**
  #     - .github/workflows/webproject.yml

jobs:

  BuildLinux:
    runs-on: ubuntu-latest  
    #runs-on: self-hosted

    env:
      # DOTNET_HOST_PATH: 'dotnet.exe'  # fixes bug #1894
      NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages
      WORK_PATH: ${{ github.workspace }}/paaslab/code


    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        clean: true

    - name: Use Nuget 4.4.1
      uses: nuget/setup-nuget@v1
      with:
        nuget-version: '4.4.1'

    # Cache nuget packages to speed up build
    # - uses: actions/cache@v2.1.4   # see https://github.com/actions/cache/blob/master/examples.md#c---nuget
    #   name: Cache Nuget
    #   id: cache
    #   with:
    #     path: ${{ github.workspace }}/.nuget/packages
    #     key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
    #     restore-keys: |
    #       ${{ runner.os }}-nuget-

    - uses: actions/setup-node@v2
      with:
        node-version: '10'   

    - uses: actions/setup-dotnet@v2
      with:
        dotnet-version: '2.2.x' # SDK Version to use; x will use the latest version of the 3.1 channel

    - run: nuget restore  ${{env.WORK_PATH}}/tailspintoysweb.csproj

    - name: dotnet publish
      run: dotnet publish ./paaslab/code/tailspintoysweb.csproj -c release -o publish

    - name: Upload webproject artifact
      uses: actions/upload-artifact@v2
      with:
        name: webproject
        path: ${{env.WORK_PATH}}/publish/ 


  DeployToDev:
    needs: BuildLinux
    # only run if this is master branch, or branch name starts with 'feature-'
    if: (github.ref == 'refs/heads/master') || startsWith( github.ref, 'refs/heads/feature-' )
    runs-on: windows-latest  
    environment:
      name: 'Dev'
      url: ${{steps.deploydev.outputs.webapp-url}}
    env:
      AZURE_WEBAPP_NAME: 'tailspintoys-paaslab-0-sitelnc'
      AZURE_WEBAPP_PACKAGE_PATH: 'webproject'

    steps:
      - uses: actions/download-artifact@v2
        with:
          name: webproject
          path: ${{env.AZURE_WEBAPP_PACKAGE_PATH}}

      - name: az login
        run: |
          az login --service-principal -u "${{secrets.APPID}}" -p "${{secrets.SPPWD}}" -t "${{secrets.TENANT}}"
          az account set -s "${{secrets.SUBID}}"

      # Deploy to Azure Web apps DEV
      - name: 'Deploy Azure webapp to Dev'
        uses: azure/webapps-deploy@v2
        id: deploydev
        with: 
          app-name: ${{ env.AZURE_WEBAPP_NAME }} 
          package: '${{ env.AZURE_WEBAPP_PACKAGE_PATH }}'

  DeploytoQA:
    if: github.ref == 'refs/heads/master'
    needs: DeploytoDev
    runs-on: windows-latest  
    environment:
      name: 'QA'
      url: ${{steps.deployqa.outputs.webapp-url}}
    env:
      AZURE_WEBAPP_NAME: 'tailspintoys-paaslab-1-sitelnc'
      AZURE_WEBAPP_PACKAGE_PATH: 'webproject'

    steps:
      - uses: actions/download-artifact@v2
        with:
          name: webproject
          path: ${{env.AZURE_WEBAPP_PACKAGE_PATH}}
      - run: dir ${{env.AZURE_WEBAPP_PACKAGE_PATH}} -name 

      - name: az login
        run: |
          az login --service-principal -u "${{secrets.APPID}}" -p "${{secrets.SPPWD}}" -t "${{secrets.TENANT}}"
          az account set -s "${{secrets.SUBID}}"

      # Deploy to Azure Web apps QA
      - name: 'Deploy Azure webapp to QA'
        uses: azure/webapps-deploy@v2
        id: deployqa
        with: 
          app-name: ${{ env.AZURE_WEBAPP_NAME }} 
          package: '${{ env.AZURE_WEBAPP_PACKAGE_PATH }}'
      

  DeploytoProd:
    needs: DeploytoQA
    runs-on: windows-latest  
    environment:
      name: 'Prod'
      url: ${{steps.deployprod.outputs.webapp-url}}
    env:
      AZURE_WEBAPP_NAME: 'tailspintoys-paaslab-2-sitelnc'
      AZURE_WEBAPP_PACKAGE_PATH: 'webproject'

    steps:
      - uses: actions/download-artifact@v2
        with:
          name: webproject
          path: ${{env.AZURE_WEBAPP_PACKAGE_PATH}}
      - run: dir ${{env.AZURE_WEBAPP_PACKAGE_PATH}} -name 

      - name: az login
        run: |
          az login --service-principal -u "${{secrets.APPID}}" -p "${{secrets.SPPWD}}" -t "${{secrets.TENANT}}"
          az account set -s "${{secrets.SUBID}}"

      # Deploy to Azure Web apps Prod
      - name: 'Deploy Azure webapp to Prod'
        uses: azure/webapps-deploy@v2
        id: deployprod
        with: 
          app-name: ${{ env.AZURE_WEBAPP_NAME }} 
          package: '${{ env.AZURE_WEBAPP_PACKAGE_PATH }}'

