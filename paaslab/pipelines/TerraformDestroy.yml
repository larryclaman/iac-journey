trigger:

pool:
  vmImage: 'ubuntu-latest'

# All variables are set in vars.yml, so they can be used across pipelines.
variables:
- template: vars.yml

steps:
- task: TerraformInstaller@0
  inputs:
    terraformVersion: '0.12.24'
  displayName: 'Install Terraform 0.12.24'
- task: CopyFiles@2
  displayName: 'Copy terraform files to working directory'
  inputs:
    SourceFolder: 'terraform'
    Contents: '**'
    TargetFolder: '$(Build.ArtifactStagingDirectory)/Terraform'
- task: TerraformTaskV1@0
  displayName: 'Terraform Init'
  inputs:
    provider: 'azurerm'
    command: 'init'
    workingDirectory: '$(Build.ArtifactStagingDirectory)/Terraform'
    backendServiceArm: ${{ variables.ServiceName }}  
    backendAzureRmResourceGroupName: ${{ variables.backendAzureRmResourceGroupName }}
    backendAzureRmStorageAccountName: ${{ variables.backendAzureRmStorageAccountName }}
    backendAzureRmContainerName: ${{ variables.backendAzureRmContainerName }}
    backendAzureRmKey: ${{ variables.backendAzureRmKey }}
- task: TerraformTaskV1@0
  displayName: 'Terraform Destroy'
  inputs:
    provider: 'azurerm'
    command: 'destroy'
    workingDirectory: '$(Build.ArtifactStagingDirectory)/Terraform'
    environmentServiceNameAzureRM: ${{ variables.ServiceName }}  