# No trigger

# Variables are set in vars.yml, so they can be used across pipelines
variables:
- name: WebAppNamePrefix
  value: 'tailspintoys-paaslab'
- name: ResourceGroupName
  value: 'tailspintoys-paaslab-rg'
- name: ServiceConnection
  value: 'EXP Prod (595a74d5-5d8a-421d-b364-979ba24a6489)-OneMTC-DEVOPS-IAC-JOURNEY' 

- template: vars.yml

# multi-stage pipeline - builds web artifacts first
stages:
  - stage: buildAndTest
    jobs:
      - job: buildSolution 
        displayName: 'Build TailspinToys web solution'
        pool:
          vmImage: 'windows-latest'
          demands:
          - msbuild
          - visualstudio
          - vstest
        variables:
          DOTNET_HOST_PATH: 'dotnet.exe'  # fixes bug #1894
          NUGET_PACKAGES: $(Pipeline.Workspace)/.nuget/packages
        steps:
          - task: Cache@2
            inputs:
              key: 'nuget | "$(Agent.OS)" | **/package-lock.json,!**/bin/**'
              restoreKeys: |
                nuget | "$(Agent.OS)"
              path: $(NUGET_PACKAGES)
            displayName: Cache NuGet packages

          - task: NuGetToolInstaller@0
            displayName: 'Use NuGet 4.4.1'
            inputs:
              versionSpec: 4.4.1
          
          - task: NodeTool@0
            inputs:
              versionSpec: '10.x'
          
          - task: NuGetCommand@2
            displayName: 'NuGet restore'
            inputs:
              restoreSolution: '**/tailspintoysweb.csproj'
          
          - task: VSBuild@1
            displayName: 'Build solution'
            inputs:
              solution: '**/tailspintoysweb.csproj'
              msbuildArgs: '/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation="$(build.artifactstagingdirectory)\\"'
              platform: 'any cpu'
              configuration: 'release'
            
          - task: PublishSymbols@2
            displayName: 'Publish symbols path'
            inputs:
              SearchPattern: '**\bin\**\*.pdb'
              PublishSymbols: false
            continueOnError: true

          - task: PublishBuildArtifacts@1
            displayName: 'Publish Artifacts'
            inputs:
              PathtoPublish: '$(build.artifactstagingdirectory)'
              ArtifactName: 'TailspinToys-CI'
            condition: succeededOrFailed()

      - job: testSolution
        displayName: 'Deploy TailspinToys to Dev'
        dependsOn: 'buildSolution'
        condition: succeeded()
        pool:
          vmImage: 'windows-latest'
        steps:
          - task: DownloadBuildArtifacts@0
            inputs:
              artifactName: 'TailspinToys-CI'
            displayName: 'Download Solution'

          - task: AzureRmWebAppDeployment@4
            inputs:
              ConnectionType: 'AzureRM'
              azureSubscription: $(ServiceConnection)
              appType: 'webApp'
              WebAppName: '$(WebAppNamePrefix)-0-site'
              deployToSlotOrASE: true
              ResourceGroupName: $(ResourceGroupName)
              SlotName: 'staging'
              packageForLinux: '$(build.artifactstagingdirectory)/**/*.zip'
          
          - task: AzureAppServiceManage@0
            inputs:
              azureSubscription: $(ServiceConnection)
              Action: 'Swap Slots'
              WebAppName: '$(WebAppNamePrefix)-0-site'
              ResourceGroupName: $(ResourceGroupName)
              SourceSlot: 'staging'

#### Deployment Stage ####
  - stage: DeploySolution
    jobs:
      - deployment: deployToTest
        displayName: 'Deploy Test Site'
        pool:
          vmImage: 'windows-latest'
        environment: EXP-PaaS-WebApp
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: none

                - task: DownloadBuildArtifacts@0
                  inputs:
                    buildType: 'current'
                    downloadType: 'single'
                    artifactName: 'TailspinToys-CI'
                    downloadPath: '$(System.ArtifactsDirectory)'

                - task: AzureRmWebAppDeployment@4
                  inputs:
                    ConnectionType: 'AzureRM'
                    azureSubscription: $(ServiceConnection)
                    appType: 'webApp'
                    WebAppName: '$(WebAppNamePrefix)-1-site'
                    deployToSlotOrASE: true
                    ResourceGroupName: $(ResourceGroupName)
                    SlotName: 'staging'
                    packageForLinux: '$(build.artifactstagingdirectory)/**/*.zip'

                - task: AzureAppServiceManage@0
                  inputs:
                    azureSubscription: $(ServiceConnection)
                    Action: 'Swap Slots'
                    WebAppName: '$(WebAppNamePrefix)-1-site'
                    ResourceGroupName: $(ResourceGroupName)
                    SourceSlot: 'staging'

      - deployment: deployToProd
        displayName: 'Deploy Prod Site'
        pool:
          vmImage: 'windows-latest'
        dependsOn: 'deployToTest'
        condition: succeeded()
        environment: EXP-PaaS-WebApp
        strategy:
          runOnce:
            deploy:
              steps:
                - checkout: none

                - task: DownloadBuildArtifacts@0
                  inputs:
                    buildType: 'current'
                    downloadType: 'single'
                    artifactName: 'TailspinToys-CI'
                    downloadPath: '$(System.ArtifactsDirectory)'
          
                - task: AzureRmWebAppDeployment@4
                  inputs:
                    ConnectionType: 'AzureRM'
                    azureSubscription: $(ServiceConnection)
                    appType: 'webApp'
                    WebAppName: '$(WebAppNamePrefix)-2-site'
                    deployToSlotOrASE: true
                    ResourceGroupName: $(ResourceGroupName)
                    SlotName: 'staging'
                    packageForLinux: '$(build.artifactstagingdirectory)/**/*.zip'        
    
                - task: AzureAppServiceManage@0
                  inputs:
                    azureSubscription: $(ServiceConnection)
                    Action: 'Swap Slots'
                    WebAppName: '$(WebAppNamePrefix)-2-site'
                    ResourceGroupName: $(ResourceGroupName)
                    SourceSlot: 'staging'